Calendrier As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)
    OnVisible: |-
        =ClearCollect(vehicule123,Defaults(Véhicule),Véhicule);
        ClearCollect(chauffeur123,Defaults(Chauffeur),Chauffeur);
        ClearCollect(Client123,Defaults(Client),Client);
        Set(_dateSelected, Today());
        Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));         
        Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
        Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
        Set(_calendarVisible,true);
        ClearCollect(months, [{m:" ",id:0},{m:"Janvier",id:1},{ m:"février",id:2},{ m:"mars",id:3}, {m:"avril",id:4}, {m:"mai",id:5}, {m:"juin",id:6}, {m:"juillet",id:7}, {m:"août",id:8}, {m:"septembre",id:9}, {m:"octobre",id:10} ,{m:"novembre" ,id:11}, {m:"décembre" ,id:12}]);
        Reset(Dropdown6_4);
        ClearCollect(
            uuu,
            DropColumns(
                AddColumns(
                    GroupBy(Missions_1,"Date_x0020_Mission","GroupedItems"),
                "Count Value",CountRows(GroupedItems)
                ),
            "GroupedItems"
            )
        );
        Set(datecalen,DateValue(_firstDayOfMonth))

    Container1_10 As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.Light
        Height: =Parent.Height
        LayoutMode: =LayoutMode.Auto
        RadiusBottomLeft: =4
        RadiusBottomRight: =4
        RadiusTopLeft: =4
        RadiusTopRight: =4
        Width: =Parent.Width
        ZIndex: =1

        Container7_9 As groupContainer.manualLayoutContainer:
            DropShadow: =DropShadow.Light
            FillPortions: =0
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            RadiusBottomLeft: =4
            RadiusBottomRight: =4
            RadiusTopLeft: =4
            RadiusTopRight: =4
            Width: =menu_13.Width
            ZIndex: =1

            menu_13 As menu_2:
                BseColorText: =//"rgba(115,131,176,1)"
                Height: =Parent.Height
                logo_compact: =//'logo-dynamix2'
                logo_padding: = If(menu_13.MenuExpended,19%,19%)
                logoExpended: =//'logo-dynamix-full'
                menuContent: =CustomNavigation
                Width: =If(menu_13.MenuExpended,150,70)

    Rectangle7_1 As rectangle:
        BorderColor: =RGBA(0, 18, 107, 1)
        Fill: =RGBA(255, 255, 255, 1)
        Height: =57
        Width: =57
        X: =201
        Y: =492
        ZIndex: =2

    LblMonthSelected4_2 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Height: =54
        Size: =21
        Text: =Text(_firstDayOfMonth, "mmmm yyyy")
        Visible: =_calendarVisible
        Width: =287
        Wrap: =false
        X: =315
        Y: =30
        ZIndex: =3

    iconPrevMonth4_2 As icon.ChevronLeft:
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =RGBA(0, 18, 107, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(244, 244, 244, 1)
        Height: =54
        Icon: =Icon.ChevronLeft
        OnSelect: |
            =/*changes month view to previous month*/
                       
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));           
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));           
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));           
            /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/           
            If(_minDate > _firstDayOfMonth,Set(_minDate, _firstDayInView));
            ClearCollect(
                DatesOfMonth,
                AddColumns(
                    Sequence(
                        DateDiff(
                           Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1),
                          DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth) + 1, 1), -1),
                           TimeUnit.Days
                        ) + 1
                    ),
                    "Date",
                    DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1), Value - 1, TimeUnit.Days)
                )
            );
        PaddingBottom: =10
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =10
        TabIndex: =0
        Tooltip: ="Afficher le mois précédent"
        Visible: =_calendarVisible
        Width: =31
        X: =214
        Y: =30
        ZIndex: =4

    iconNextMonth4_2 As icon.ChevronRight:
        BorderColor: =RGBA(0, 18, 107, 1)
        Color: =RGBA(0, 18, 107, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(244, 244, 244, 1)
        Height: =54
        Icon: =Icon.ChevronRight
        OnSelect: |-
            =/*changes month view to next month*/
                       
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));           
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));           
            /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/           
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));           
            If(_maxDate < _lastDayOfMonth,                     
             Set(_maxDate, DateAdd(_firstDayInView, 40, TimeUnit.Days)));
             ClearCollect(
                DatesOfMonth,
                AddColumns(
                    Sequence(
                        DateDiff(
                           Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1),
                          DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth) + 1, 1), -1),
                           TimeUnit.Days
                        ) + 1
                    ),
                    "Date",
                    DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1), Value - 1, TimeUnit.Days)
                )
            );
             
        PaddingBottom: =10
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =10
        TabIndex: =0
        Tooltip: ="Afficher le mois suivant"
        Visible: =_calendarVisible
        Width: =31
        X: =682
        Y: =30
        ZIndex: =5

    WeekdayGallery4_2 As gallery.WeekdayGallery:
        AccessibleLabel: ="Jours de la semaine"
        BorderColor: =RGBA(0, 18, 107, 1)
        Height: =65
        Items: =Calendar.WeekdaysShort()
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =91
        Visible: =_calendarVisible
        Width: =631
        X: =168
        Y: =84
        ZIndex: =6

        Title12_2 As label:
            Align: =Align.Center
            Color: =RGBA(0, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =WeekdayGallery4_2.TemplateHeight
            OnSelect: =Select(Parent)
            Size: =17 * WeekdayGallery4_2.TemplateWidth / 77
            Text: =ThisItem.Value
            Width: =WeekdayGallery4_2.TemplateWidth
            Wrap: =false
            X: =WeekdayGallery4_2.TemplateWidth / 2 - Self.Width / 2
            Y: =WeekdayGallery4_2.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =1

    Button23 As button:
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(56, 96, 178, 1)
        FontWeight: =FontWeight.Semibold
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(56, 96, 178, 1), -20%)
        OnSelect: |+
            =Set(departM, DateValue(DateValue7.SelectedDate) + Time(Value(HourValue7.SelectedText.Value), Value(MinuteValue7.SelectedText.Value), 0));
            
            Set(retourM, DateValue(DateValue8.SelectedDate) + Time(Value(HourValue8.SelectedText.Value), Value(MinuteValue8.SelectedText.Value), 0));
            ClearCollect(DispF,Disponibilité_1);
            // Filtrer les chauffeurs disponibles pour les dates spécifiées
            ClearCollect(ChauffeursDisponibles, Filter(DispF, Type = "Chauffeur" )); // Filtrer les chauffeurs disponibles qui ont une disponibilité fausse par défaut
            // Comparer les disponibilités avec les dates de mission
            ForAll(ChauffeursDisponibles,
                If(
                    DateTimeValue(ChauffeursDisponibles[@'Date Sortie']) < DateValue(retourM) + Time(Value(HourValue8.SelectedText.Value), Value(MinuteValue8.SelectedText.Value), 0) &&
                    DateTimeValue(ChauffeursDisponibles[@'Date entrée']) < DateValue(departM) + Time(Value(HourValue7.SelectedText.Value), Value(MinuteValue7.SelectedText.Value), 0) ||
                    departM < DateTimeValue(ChauffeursDisponibles[@'Date Sortie']) && retourM < DateTimeValue(ChauffeursDisponibles[@'Date Sortie']),
                    // Si les dates de mission sont disponibles, patchez false dans Disponibilité
                    Patch(Disponibilité_1, ThisRecord, {disponibilité: false}),
                    // Sinon, patchez true dans Disponibilité
                    Patch(Disponibilité_1, ThisRecord, {disponibilité: true})
                )
            );
            
            //Refresh(Disponibilité);;
            ClearCollect(DispoChF,Disponibilité_1);
            ClearCollect(ChauffeursDisponiblesss, Filter(DispoChF, Type = "Chauffeur")); 
            
            
            ClearCollect(DispFiltre, Filter(ChauffeursDisponiblesss,!IsBlank(LookUp(Disponibilité_1,'No chauffeur'= ChauffeursDisponiblesss[@'No chauffeur'], disponibilité = true))));
            Clear(dispooaFiltre);
            
            ForAll(DispFiltre,
                If(
                    CountIf(Filter(DispoChF,'No chauffeur'= DispFiltre[@'No chauffeur']), disponibilité = false) = CountRows(Filter(DispoChF,'No chauffeur' = DispFiltre[@'No chauffeur'])),
                    Collect(dispooaFiltre, DispFiltre[@'No chauffeur']),
                    Notify("Chauffeur " & DispFiltre[@'No chauffeur'] & " n'est pas disponible pour toutes les missions.")
                )
            );
            ClearCollect(colll,dispooaFiltre);
            ClearCollect(ChauffF,Chauffeur);
            
            
            
            
            
            Set(disponiCh,Disponibilité_1);
            Set(ChauffeuF,Filter(
              ChauffF,
                Inactif = false &&
                IsEmpty(
                    Filter(
                       disponiCh,
                        'No chauffeur'=ChauffF[@Code]
                    )
                )
            ));
            
            
            ClearCollect(ChauffeDispF,ChauffeuF.Code);
            ClearCollect(ChauffeursDisponiblesFiltres,Filter(ChauffF,Inactif = false && Code in colll || Inactif = false && Code in ChauffeDispF ));
            
            
            
            
            
            
            
            
            
            
            
            
            
            // Filtrer les chauffeurs disponibles pour les dates spécifiées
            ClearCollect(VehiculesDisponibles, Filter(DispF, Type = "Véhicule" )); // Filtrer les chauffeurs disponibles qui ont une disponibilité fausse par défaut
            // Comparer les disponibilités avec les dates de mission
            ForAll(VehiculesDisponibles,
                If(
                    DateTimeValue(VehiculesDisponibles[@'Date Sortie']) < DateValue(retourM) + Time(Value(HourValue8.SelectedText.Value), Value(MinuteValue8.SelectedText.Value), 0) &&
                    DateTimeValue(VehiculesDisponibles[@'Date entrée']) < DateValue(departM) + Time(Value(HourValue7.SelectedText.Value), Value(MinuteValue7.SelectedText.Value), 0) ||
                    departM < DateTimeValue(VehiculesDisponibles[@'Date Sortie']) && retourM < DateTimeValue(VehiculesDisponibles[@'Date Sortie']),
                    // Si les dates de mission sont disponibles, patchez false dans Disponibilité
                    Patch(Disponibilité_1, ThisRecord, {disponibilité: false}),
                    // Sinon, patchez true dans Disponibilité
                    Patch(Disponibilité_1, ThisRecord, {disponibilité: true})
                )
            );
            
            Refresh(Disponibilité_1);
            ClearCollect(DispoVhF,Disponibilité_1);
            ClearCollect(VehiculesDisponiblesss, Filter(DispoVhF, Type = "Véhicule")); 
            
            
            ClearCollect(DispVhFiltre, Filter(VehiculesDisponiblesss,!IsBlank(LookUp(Disponibilité_1,'No véhicule'= VehiculesDisponiblesss[@'No véhicule'], disponibilité = true))));
            Clear(dispooVHFiltre);
            
            ForAll(DispVhFiltre,
                If(
                    CountIf(Filter(DispoVhF,'No véhicule'= DispVhFiltre[@'No véhicule']), disponibilité = false) = CountRows(Filter(DispoVhF,'No véhicule' = DispVhFiltre[@'No véhicule'])),
                    Collect(dispooVHFiltre, DispVhFiltre[@'No véhicule']),
                    Notify("Véhicule " & DispVhFiltre[@'No véhicule'] & " n'est pas disponible pour toutes les missions.")
                )
            );
            ClearCollect(colVH,dispooVHFiltre);
            ClearCollect(VehicFC,Véhicule);
            
            
            Set(disponi,Disponibilité_1);
            Set(VéhiculeF,Filter(
               VehicFC ,
                Bloqué = false &&
                IsEmpty(
                    Filter(
                       disponi,
                        'No véhicule' = VehicFC[@'No véhicule']
                    )
                )
            ));
            ClearCollect(VehicDispF,VéhiculeF.'No véhicule');
            
            
            ClearCollect(VéhiculesDisponiblesFiltres,Filter(VehicFC,Bloqué = false  && 'No véhicule' in colVH  || Bloqué = false && 'No véhicule' in VehicDispF))
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
        Size: =15
        Text: ="dispo "
        X: =617
        Y: =562
        ZIndex: =8

    DataTable1 As dataTable.datatable:
        BorderColor: =RGBA(0, 18, 107, 1)
        BorderStyle: =BorderStyle.Solid
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(0, 0, 0, 0)
        Font: =Font.'Open Sans'
        FontWeight: =FontWeight.Normal
        HeadingColor: =RGBA(255, 255, 255, 1)
        HeadingFill: =RGBA(56, 96, 178, 1)
        HeadingFont: =Font.'Open Sans'
        HeadingFontWeight: =FontWeight.Normal
        HeadingSize: =13
        Height: =116
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, .2)
        InputFill: =RGBA(255, 255, 255, 1)
        InvertedColor: =RGBA(255, 255, 255, 1)
        Items: =VéhiculesDisponiblesFiltres
        LinkColor: =RGBA(0, 134, 208, 1)
        PrimaryColor1: =RGBA(56, 96, 178, 1)
        PrimaryColor2: =RGBA(0, 18, 107, 1)
        PrimaryColor3: =RGBA(186, 202, 226, 1)
        SelectedColor: =RGBA(0, 0, 0, 1)
        SelectedFill: =RGBA(56, 96, 178, .2)
        Size: =13
        Width: =477
        X: =201
        Y: =630
        ZIndex: =9

        Bloqué_Colonne1 As dataTableColumn.booleanColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Bloqué"
            FieldName: ="Bloqué"
            FieldVariantName: ="booleanColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =1
            Text: =ThisItem.Bloqué
            Width: =100
            X: =0
            Y: =0
            ZIndex: =4

        "'No véhicule_Colonne1' As dataTableColumn.textualColumn":
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="No véhicule"
            FieldName: ="No_x0020_véhicule"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =2
            Text: =ThisItem.'No véhicule'
            Width: =100
            X: =212
            Y: =0
            ZIndex: =5

        "'Code Catégorie_Colonne1' As dataTableColumn.textualColumn":
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Code Catégorie"
            FieldName: ="Code_x0020_Catégorie"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =3
            Text: =ThisItem.'Code Catégorie'
            Width: =168
            X: =328
            Y: =0
            ZIndex: =6

    DataTable2 As dataTable.datatable:
        BorderColor: =RGBA(0, 18, 107, 1)
        BorderStyle: =BorderStyle.Solid
        Color: =RGBA(0, 0, 0, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(0, 0, 0, 0)
        Font: =Font.'Open Sans'
        FontWeight: =FontWeight.Normal
        HeadingColor: =RGBA(255, 255, 255, 1)
        HeadingFill: =RGBA(56, 96, 178, 1)
        HeadingFont: =Font.'Open Sans'
        HeadingFontWeight: =FontWeight.Normal
        HeadingSize: =13
        Height: =116
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, .2)
        InputFill: =RGBA(255, 255, 255, 1)
        InvertedColor: =RGBA(255, 255, 255, 1)
        Items: =ChauffeursDisponiblesFiltres
        LinkColor: =RGBA(0, 134, 208, 1)
        PrimaryColor1: =RGBA(56, 96, 178, 1)
        PrimaryColor2: =RGBA(0, 18, 107, 1)
        PrimaryColor3: =RGBA(186, 202, 226, 1)
        SelectedColor: =RGBA(0, 0, 0, 1)
        SelectedFill: =RGBA(56, 96, 178, .2)
        Size: =13
        Width: =503
        X: =703
        Y: =632
        ZIndex: =10

        Code_Colonne1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Code"
            FieldName: ="Code"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =1
            Text: =ThisItem.Code
            Width: =100
            X: =0
            Y: =0
            ZIndex: =8

        Inactif_Colonne1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Inactif"
            FieldName: ="Inactif"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =2
            Text: =ThisItem.Inactif
            Width: =100
            X: =0
            Y: =0
            ZIndex: =9

        Nom_Colonne1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Nom"
            FieldName: ="Nom"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =3
            Text: =ThisItem.Nom
            Width: =100
            X: =0
            Y: =0
            ZIndex: =10

    Form10 As form:
        BorderColor: =RGBA(0, 18, 107, 1)
        DataSource: =Missions_1
        Height: =110
        Item: =Defaults(Missions_1)
        NumberOfColumns: =2
        Width: =673
        X: =361
        Y: =429
        ZIndex: =11

        "'Date Départ_DataCard1' As typedDataCard.dateTimeEditCard":
            BorderColor: =RGBA(0, 18, 107, 1)
            BorderStyle: =BorderStyle.Solid
            DataField: ="Date_x0020_Départ"
            Default: =ThisItem.'Date Départ'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@Missions_1],DataSourceInfo.DisplayName,"Date_x0020_Départ")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =98
            Required: =false
            Update: =If(Not IsBlank(DateValue7.SelectedDate), DateValue7.SelectedDate + Time(Value(HourValue7.Selected.Value), Value(MinuteValue7.Selected.Value), 0))
            Width: =336
            X: =0
            Y: =0
            ZIndex: =1

            DataCardKey75 As label:
                AutoHeight: =true
                Color: =RGBA(0, 18, 107, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =34
                Size: =13
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            DateValue7 As datepicker:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                CalendarHeaderFill: =RGBA(56, 96, 178, 1)
                Color: =RGBA(0, 0, 0, 1)
                DefaultDate: =Parent.Default
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =Parent.DisplayMode
                EndYear: =Year(Today())+100
                HoverDateFill: =RGBA(186, 202, 226, 1)
                IconBackground: =RGBA(56, 96, 178, 1)
                IsEditable: =true
                PaddingBottom: =0
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                SelectedDateFill: =RGBA(56, 96, 178, 1)
                StartYear: =1899
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) / 2
                X: =30
                Y: =DataCardKey75.Y + DataCardKey75.Height + 5
                ZIndex: =2

            HourValue7 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                ChevronBackground: =RGBA(56, 96, 178, 1)
                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                Default: =Text(Hour(Parent.Default),"00")
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =Parent.DisplayMode
                Height: =DateValue7.Height
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(186, 202, 226, 1)
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =RGBA(0, 18, 107, 1)
                SelectionFill: =RGBA(56, 96, 178, 1)
                Size: =13
                Tooltip: =Parent.DisplayName
                Width: =DateValue7.Width / 2 - 10
                X: =DateValue7.X + DateValue7.Width + 10
                Y: =DateValue7.Y
                ZIndex: =3

            Separator16 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 18, 107, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FontWeight: =FontWeight.Bold
                Height: =HourValue7.Height
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =13
                Text: |-
                    =":"
                Width: =10
                Wrap: =false
                X: =HourValue7.X + HourValue7.Width
                Y: =HourValue7.Y
                ZIndex: =4

            MinuteValue7 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                ChevronBackground: =RGBA(56, 96, 178, 1)
                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                Default: =Text(Minute(Parent.Default),"00")
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =Parent.DisplayMode
                Height: =HourValue7.Height
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(186, 202, 226, 1)
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =RGBA(0, 18, 107, 1)
                SelectionFill: =RGBA(56, 96, 178, 1)
                Size: =13
                Tooltip: =Parent.DisplayName
                Width: =HourValue7.Width
                X: =HourValue7.X + HourValue7.Width + Separator16.Width
                Y: =HourValue7.Y
                ZIndex: =5

            ErrorMessage78 As label:
                AutoHeight: =true
                Color: =RGBA(168, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FontWeight: =FontWeight.Semibold
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =HourValue7.Y + HourValue7.Height
                ZIndex: =6

            StarVisible78 As label:
                Align: =Align.Center
                Color: =RGBA(0, 18, 107, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =DataCardKey75.Height
                Size: =13
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey75.Y
                ZIndex: =7

        "'Date Retour_DataCard1' As typedDataCard.dateTimeEditCard":
            BorderColor: =RGBA(0, 18, 107, 1)
            BorderStyle: =BorderStyle.Solid
            DataField: ="Date_x0020_Retour"
            Default: =ThisItem.'Date Retour'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@Missions_1],DataSourceInfo.DisplayName,"Date_x0020_Retour")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =If(Not IsBlank(DateValue8.SelectedDate), DateValue8.SelectedDate + Time(Value(HourValue8.Selected.Value), Value(MinuteValue8.Selected.Value), 0))
            Width: =336
            X: =1
            Y: =0
            ZIndex: =1

            DataCardKey76 As label:
                AutoHeight: =true
                Color: =RGBA(0, 18, 107, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =34
                Size: =13
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            DateValue8 As datepicker:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                CalendarHeaderFill: =RGBA(56, 96, 178, 1)
                Color: =RGBA(0, 0, 0, 1)
                DefaultDate: =Parent.Default
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =Parent.DisplayMode
                EndYear: =Year(Today())+100
                HoverDateFill: =RGBA(186, 202, 226, 1)
                IconBackground: =RGBA(56, 96, 178, 1)
                IsEditable: =true
                PaddingBottom: =0
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                SelectedDateFill: =RGBA(56, 96, 178, 1)
                StartYear: =1899
                Tooltip: =Parent.DisplayName
                Width: =(Parent.Width - 60) / 2
                X: =30
                Y: =DataCardKey76.Y + DataCardKey76.Height + 5
                ZIndex: =2

            HourValue8 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                ChevronBackground: =RGBA(56, 96, 178, 1)
                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                Default: =Text(Hour(Parent.Default),"00")
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =Parent.DisplayMode
                Height: =DateValue8.Height
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(186, 202, 226, 1)
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =RGBA(0, 18, 107, 1)
                SelectionFill: =RGBA(56, 96, 178, 1)
                Size: =13
                Tooltip: =Parent.DisplayName
                Width: =DateValue8.Width / 2 - 10
                X: =DateValue8.X + DateValue8.Width + 10
                Y: =DateValue8.Y
                ZIndex: =3

            Separator17 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 18, 107, 1)
                Color: =RGBA(0, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FontWeight: =FontWeight.Bold
                Height: =HourValue8.Height
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =13
                Text: |-
                    =":"
                Width: =10
                Wrap: =false
                X: =HourValue8.X + HourValue8.Width
                Y: =HourValue8.Y
                ZIndex: =4

            MinuteValue8 As dropdown:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                ChevronBackground: =RGBA(56, 96, 178, 1)
                ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
                ChevronDisabledFill: =RGBA(244, 244, 244, 1)
                ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
                ChevronHoverFill: =RGBA(255, 255, 255, 1)
                Default: =Text(Minute(Parent.Default),"00")
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =Parent.DisplayMode
                Height: =HourValue8.Height
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(186, 202, 226, 1)
                Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =RGBA(0, 18, 107, 1)
                SelectionFill: =RGBA(56, 96, 178, 1)
                Size: =13
                Tooltip: =Parent.DisplayName
                Width: =HourValue8.Width
                X: =HourValue8.X + HourValue8.Width + Separator17.Width
                Y: =HourValue8.Y
                ZIndex: =5

            ErrorMessage79 As label:
                AutoHeight: =true
                Color: =RGBA(168, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                FontWeight: =FontWeight.Semibold
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =HourValue8.Y + HourValue8.Height
                ZIndex: =6

            StarVisible79 As label:
                Align: =Align.Center
                Color: =RGBA(0, 18, 107, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Height: =DataCardKey76.Height
                Size: =13
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey76.Y
                ZIndex: =7

    MonthDayGallery2_1 As gallery.MonthDayGallery:
        AccessibleLabel: ="Jours du mois sélectionné"
        BorderColor: =RGBA(0, 18, 107, 1)
        Height: =314
        Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Visible: =_calendarVisible
        Width: =662
        WrapCount: =7
        X: =185
        Y: =115
        ZIndex: =13

        Circle2_1 As circle:
            BorderColor: =RGBA(0, 18, 107, 1)
            Fill: =RGBA(186, 202, 226, 1)
            Height: =Self.Width
            OnSelect: =Select(Parent)
            Visible: =false
            Width: =6.5
            X: =MonthDayGallery2_1.TemplateWidth / 2 - Self.Width / 2
            Y: =MonthDayGallery2_1.TemplateHeight * (0.75)
            ZIndex: =1

        Subcircle2_1 As circle:
            BorderColor: =RGBA(0, 18, 107, 1)
            Fill: =RGBA(56, 96, 178, 1)
            Height: =3 * Title12_1.Size
            OnSelect: =Select(Parent)
            Visible: =false
            Width: =Self.Height
            X: =MonthDayGallery2_1.TemplateWidth/2 - Self.Width/2
            Y: =MonthDayGallery2_1.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =2

        Title12_1 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =//If(DateAdd(_firstDayInView; ThisItem.Value) = _dateSelected; RGBA(255; 255; 255;1 ); DateAdd(_firstDayInView; ThisItem.Value) = Today(); RGBA//(47; 41; 43; 1); LblMonthSelected2.Color)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Fill: |-
                =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                If(
                    /*Date selected is today*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                    /*Today when it is not selected*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle2_1.Fill, 0.67), 
                    /*The day is outside the range of the currently selected month*/
                    Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
            FocusedBorderColor: =Self.Color
            FocusedBorderThickness: =2
            Height: =30
            OnSelect: |-
                =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days));
                Navigate(MissionF);
                ClearCollect(miss,Missions_1);
                ClearCollect(Fmission,Filter(miss,DateValue('Date Mission')= DateValue(_dateSelected)));
            Size: =12
            TabIndex: =0
            Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
            Visible: |-
                =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                 !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
            Width: =49
            Wrap: =false
            Y: =28
            ZIndex: =3

        Label8_2 As label:
            BorderColor: =RGBA(0, 18, 107, 1)
            Color: =RGBA(151, 0, 0, 1)
            DisabledColor: =RGBA(166, 166, 166, 1)
            Height: =46
            OnSelect: =Select(Parent)
            Size: =18
            Text: |
                =If(
                    !IsBlank(Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode') &&
                    !IsBlank(Dropdown6_2.SelectedText.'No véhicule') &&
                    !IsBlank(Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'),
                    LookUp(FAll,
                        Date_x0020_Mission = Date(
                            Value(Mid(_firstDayOfMonth, 7, 4)),
                            Value(Mid(_firstDayOfMonth, 4, 2)),
                            Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                        )
                    ).'Count Value',
                    If(
                        !IsBlank(Dropdown6_2.SelectedText.'No véhicule') &&
                        !IsBlank(Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo') &&
                        IsBlank(Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'),
                        LookUp(FVecClient,
                            Date_x0020_Mission = Date(
                                Value(Mid(_firstDayOfMonth, 7, 4)),
                                Value(Mid(_firstDayOfMonth, 4, 2)),
                                Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                            )
                        ).'Count Value',
                        If(
                            !IsBlank(Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode') &&
                            !IsBlank(Dropdown6_2.SelectedText.'No véhicule'),
                            LookUp(FVehChauf,
                                Date_x0020_Mission = Date(
                                    Value(Mid(_firstDayOfMonth, 7, 4)),
                                    Value(Mid(_firstDayOfMonth, 4, 2)),
                                    Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                                )
                            ).'Count Value',
                            If(
                                !IsBlank(Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'),
                                LookUp(ccc,
                                    Date_x0020_Mission = Date(
                                        Value(Mid(_firstDayOfMonth, 7, 4)),
                                        Value(Mid(_firstDayOfMonth, 4, 2)),
                                        Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                                    )
                                ).'Count Value',
                                If(
                                    !IsBlank(Dropdown6_2.SelectedText.'No véhicule'),
                                    LookUp(FVehicCal,
                                        Date_x0020_Mission = Date(
                                            Value(Mid(_firstDayOfMonth, 7, 4)),
                                            Value(Mid(_firstDayOfMonth, 4, 2)),
                                            Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                                        )
                                    ).'Count Value',
                                    If(
                                        !IsBlank(Dropdown6_2.SelectedText.'No véhicule') &&
                                        !IsBlank(Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'),
                                        LookUp(FVecClient,
                                            Date_x0020_Mission = Date(
                                                Value(Mid(_firstDayOfMonth, 7, 4)),
                                                Value(Mid(_firstDayOfMonth, 4, 2)),
                                                Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                                            )
                                        ).'Count Value',
                                        If(
                                            IsBlank(Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode') &&
                                            IsBlank(Dropdown6_2.SelectedText.'No véhicule') &&
                                            !IsBlank(Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'),
                                            LookUp(Fcl,
                                                Date_x0020_Mission = Date(
                                                    Value(Mid(_firstDayOfMonth, 7, 4)),
                                                    Value(Mid(_firstDayOfMonth, 4, 2)),
                                                    Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                                                )
                                            ).'Count Value',
                                            If(
                                                !IsBlank(Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode') &&
                                                IsBlank(Dropdown6_2.SelectedText.'No véhicule') &&
                                                !IsBlank(Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'),
                                                LookUp(FchaufClient,
                                                    Date_x0020_Mission = Date(
                                                        Value(Mid(_firstDayOfMonth, 7, 4)),
                                                        Value(Mid(_firstDayOfMonth, 4, 2)),
                                                        Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                                                    )
                                                ).'Count Value',
                                                LookUp(uuu,
                                                    Date_x0020_Mission = Date(
                                                        Value(Mid(_firstDayOfMonth, 7, 4)),
                                                        Value(Mid(_firstDayOfMonth, 4, 2)),
                                                        Day(DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                                                    )
                                                ).'Count Value'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            Width: =47
            X: =40
            Y: =14
            ZIndex: =4

    Dropdown6_1 As dropdown:
        BorderColor: =RGBA(0, 18, 107, 1)
        ChevronBackground: =RGBA(56, 96, 178, 1)
        ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
        ChevronDisabledFill: =RGBA(244, 244, 244, 1)
        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
        ChevronHoverFill: =RGBA(255, 255, 255, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, 1)
        Items: =chauffeur123
        OnChange: |-
            =Refresh(Missions_1);
            ClearCollect(dd,Filter(Missions_1,'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'));
            ClearCollect(
                ccc,
                  DropColumns(
                    AddColumns(
                        GroupBy(dd,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(vehicchauf,Filter(Missions_1,'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'&&'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'));
            ClearCollect(
                FVehChauf,
                  DropColumns(
                    AddColumns(
                        GroupBy(vehicchauf,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(ChaufClient,Filter(Missions_1,'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'&&'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                FchaufClient,
                  DropColumns(
                    AddColumns(
                        GroupBy(ChaufClient,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(All,Filter(Missions_1,'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'&&'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'&&'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                FAll,
                  DropColumns(
                    AddColumns(
                        GroupBy(All,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            )
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(0, 18, 107, 1)
        SelectionFill: =RGBA(56, 96, 178, 1)
        Size: =13
        X: =950
        Y: =337
        ZIndex: =14

    Dropdown6_2 As dropdown:
        BorderColor: =RGBA(0, 18, 107, 1)
        ChevronBackground: =RGBA(56, 96, 178, 1)
        ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
        ChevronDisabledFill: =RGBA(244, 244, 244, 1)
        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
        ChevronHoverFill: =RGBA(255, 255, 255, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, 1)
        Items: =vehicule123
        OnChange: |-
            =Refresh(Missions_1);
            ClearCollect(VehicCalend,Filter(Missions_1,'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'));
            ClearCollect(
                FVehicCal,
                  DropColumns(
                    AddColumns(
                        GroupBy(VehicCalend,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(vehicchauf,Filter(Missions_1,'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'&&'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'));
            ClearCollect(
                FVehChauf,
                  DropColumns(
                    AddColumns(
                        GroupBy(vehicchauf,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(Vehicclient,Filter(Missions_1,'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'&&'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                FVecClient,
                  DropColumns(
                    AddColumns(
                        GroupBy(Vehicclient,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(All,Filter(Missions_1,'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'&&'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'&&'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                FAll,
                  DropColumns(
                    AddColumns(
                        GroupBy(All,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            )
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(0, 18, 107, 1)
        SelectionFill: =RGBA(56, 96, 178, 1)
        Size: =13
        X: =950
        Y: =223
        ZIndex: =15

    Dropdown6_3 As dropdown:
        BorderColor: =RGBA(0, 18, 107, 1)
        ChevronBackground: =RGBA(56, 96, 178, 1)
        ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
        ChevronDisabledFill: =RGBA(244, 244, 244, 1)
        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
        ChevronHoverFill: =RGBA(255, 255, 255, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, 1)
        Items: =Client123
        OnChange: |+
            =ClearCollect(FClient,Filter(Missions_1,'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                Fcl,
                  DropColumns(
                    AddColumns(
                        GroupBy(FClient,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(Vehicclient,Filter(Missions_1,'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'&&'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                FVecClient,
                  DropColumns(
                    AddColumns(
                        GroupBy(Vehicclient,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(ChaufClient,Filter(Missions_1,'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'&&'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                FchaufClient,
                  DropColumns(
                    AddColumns(
                        GroupBy(ChaufClient,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            );
            ClearCollect(All,Filter(Missions_1,'Code Chauffeur'=Dropdown6_1.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BCode'&&'No véhicule'=Dropdown6_2.SelectedText.'No véhicule'&&'Code Client'=Dropdown6_3.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BNo'));
            ClearCollect(
                FAll,
                  DropColumns(
                    AddColumns(
                        GroupBy(All,"Date_x0020_Mission","GroupedItems"),
                    "Count Value",CountRows(GroupedItems)
                    ),
                "GroupedItems"
                  )
            )
            
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(0, 18, 107, 1)
        SelectionFill: =RGBA(56, 96, 178, 1)
        Size: =13
        X: =950
        Y: =274
        ZIndex: =16

    Dropdown6_4 As dropdown:
        BorderColor: =RGBA(0, 18, 107, 1)
        ChevronBackground: =RGBA(56, 96, 178, 1)
        ChevronDisabledBackground: =RGBA(166, 166, 166, 1)
        ChevronDisabledFill: =RGBA(244, 244, 244, 1)
        ChevronHoverBackground: =ColorFade(RGBA(56, 96, 178, 1), -20%)
        ChevronHoverFill: =RGBA(255, 255, 255, 1)
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, 1)
        Items: =months
        OnChange: |+
            =//Set(_firstDayOfMonth1;Text(DateAdd(_firstDayOfMonth;If(Value(Mid(_firstDayOfMonth;4;2))>Dropdown6_4.Selected.id;TimeUnit.Months;Dropdown6_4.Selected.id;-Dropdown6_4.Selected.id ));"mmmm yyyy"));;
            // Dans l'événement OnChange de votre dropdown, modifiez la valeur de _firstDayOfMonth
            /*Set(_firstDayOfMonth;
                
                    DateTimeValue(
                        Concatenate(
                           
                            "01/"; 
                            Text(Dropdown6_4.Selected.id; "[$-fr]00/");// Ajoutez "/01/" pour indiquer le premier jour du mois
                            Text(Today(); "[$-fr]yyyy") // Année actuelle (peut être ajustée selon vos besoins)
                        )
                    ));;*/
            
            
            Set(
                _firstDayOfMonth,
                If(Dropdown6_4.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1Bid'=0 && IsBlank(TextInput1.Text),DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days),
                DateTimeValue(
                    Concatenate(
                        "01/",
                        Text(Dropdown6_4.Selected.id, "[$-fr]00/"),
                        If(
                            IsBlank(TextInput1.Text), // Vérifie si l'input texte est vide
                            Text(Today(), "[$-fr]yyyy"), // Si vide, utilisez l'année actuelle
                            TextInput1.Text // Sinon, utilisez l'année saisie dans l'input texte
                        )
                    )
                ))
            );
            
                   // Dans l'événement OnChange de votre dropdown
            // Déclencher la mise à jour du calendrier en appelant les étapes de mise à jour actuelles
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
            If(_maxDate < _lastDayOfMonth, Set(_maxDate, DateAdd(_firstDayInView, 40, TimeUnit.Days)));
            ClearCollect(
                DatesOfMonth,
                AddColumns(
                    Sequence(
                        DateDiff(
                           Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1),
                           DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth) + 1, 1), -1),
                           TimeUnit.Days
                        ) + 1
                    ),
                    "Date",
                    DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1), Value - 1, TimeUnit.Days)
                )
            )
            
            
            
            
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =RGBA(0, 18, 107, 1)
        SelectionFill: =RGBA(56, 96, 178, 1)
        Size: =13
        X: =950
        Y: =159
        ZIndex: =17

    TextInput1 As text:
        BorderColor: =RGBA(0, 18, 107, 1)
        BorderThickness: =2
        Color: =RGBA(0, 0, 0, 1)
        Default: =
        DisabledBorderColor: =RGBA(166, 166, 166, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        FocusedBorderThickness: =4
        HoverBorderColor: =RGBA(0, 18, 107, 1)
        HoverColor: =RGBA(0, 0, 0, 1)
        HoverFill: =RGBA(186, 202, 226, 1)
        OnChange: |+
            =Set(
                _firstDayOfMonth,
            
            If(IsBlank(TextInput1.Text) && Dropdown6_4.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1Bid'=0,DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days),
                If(IsBlank(TextInput1.Text)&& !IsBlank(Dropdown6_4.SelectedText),
            
            DateTimeValue(
                    Concatenate(
                        "01/",
                        Text(Dropdown6_4.Selected.id, "[$-fr]00/"),
                        If(
                            IsBlank(TextInput1.Text), // Vérifie si l'input texte est vide
                            Text(Today(), "[$-fr]yyyy"), // Si vide, utilisez l'année actuelle
                            TextInput1.Text // Sinon, utilisez l'année saisie dans l'input texte
                        )
                    )
                ),
                
            If(IsBlank(TextInput1.Text) ,DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days),
                If(Dropdown6_4.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1Bid'=0, 
                
                DateTimeValue(Concatenate("01/","01/",Text(TextInput1.Text, "[$-fr]00/"))),
            
                DateTimeValue(Concatenate("01/",Text(Dropdown6_4.Selected.id, "[$-fr]00/"),
                Text(TextInput1.Text, "[$-fr]00/") ))
                )
            
            )
            
                )
            ));
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
            If(_maxDate < _lastDayOfMonth, Set(_maxDate, DateAdd(_firstDayInView, 40, TimeUnit.Days)));
            ClearCollect(
                DatesOfMonth,
                AddColumns(
                    Sequence(
                        DateDiff(
                           Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1),
                           DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth) + 1, 1), -1),
                           TimeUnit.Days
                        ) + 1
                    ),
                    "Date",
                    DateAdd(Date(Year(_firstDayOfMonth), Month(_firstDayOfMonth), 1), Value - 1, TimeUnit.Days)
                )
            )
            
        Size: =13
        X: =950
        Y: =101
        ZIndex: =18

